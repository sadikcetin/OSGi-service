package org.sifirbir.osgi.manager;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import org.osgi.util.tracker.ServiceTracker;
import org.osgi.util.tracker.ServiceTrackerCustomizer;
import org.sifirbir.osgi.language.api.ILanguage;
import org.sifirbir.osgi.manager.impl.ManagerImpl;

public class Activator implements BundleActivator, ServiceTrackerCustomizer<ILanguage, ILanguage> {

	private ServiceTracker<ILanguage, ILanguage> serviceTrackerLanguage;
	private BundleContext context = null;
	
	@Override
	public void start(BundleContext arg0) throws Exception {
		this.context = arg0;
		trackILanguageService();
	}
	
	private void trackILanguageService() {
		serviceTrackerLanguage = new ServiceTracker<ILanguage, ILanguage>(this.context, ILanguage.class, this);
		serviceTrackerLanguage.open();
	}
	
	private void unTrackILanguageService() {
		serviceTrackerLanguage.close();
		serviceTrackerLanguage = null;
	}
	

	@Override
	public void stop(BundleContext arg0) throws Exception {
		this.context = null;
		unTrackILanguageService();
	}

	@Override
	public ILanguage addingService(ServiceReference<ILanguage> arg0) {
		ILanguage service = this.context.getService(arg0);
		ManagerImpl.getInstance().addService(service);		
		return service;
	}

	@Override
	public void modifiedService(ServiceReference<ILanguage> arg0, ILanguage arg1) {
		
	}

	@Override
	public void removedService(ServiceReference<ILanguage> arg0, ILanguage arg1) {
		
	}

}
